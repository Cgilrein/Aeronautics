import board
import busio
import adafruit_ads1x15.ads1115 as ADS
from adafruit_ads1x15.analog_in import AnalogIn
import serial
from time import sleep
#import string
import pynmea2  

################ CONFIGS ##################################

samples_per_sec = 4
run_time = 60  # Run time is one min

################# Inititalize ADC ############################

i2c = busio.I2C(board.SCL, board.SDA)

ads = ADS.ADS1115(i2c)
ads.gain = 1

###########################################################

sample_rate = 1 / samples_per_sec  # Sample rate in samples per second

def average(cords): 
    return sum(cords) / len(cords)

def main():
    time = 0
    lat_list = []
    lng_list = []
    while time < (60 * 4):
        # GPS collects long and lat data for 60 secs at 4 samps/sec
        ser = serial.Serial("/dev/ttyAMA0", baudrate=9600, timeout=1)
        dataout = pynmea2.NMEAStreamReader()
        newdata = ser.readline()
        print("GPS raw data: ", end="")
        print(newdata)
        gps_error = True
        if "$GPRMC" in str(newdata):
            gps_error = False
            print(newdata.decode("utf-8"))
            newmsg = pynmea2.parse(newdata.decode("utf-8"))
            lat = newmsg.latitude
            lng = newmsg.longitude
            lat_list.append(lat)
            lng_list.append(lng)
            gps = "Latitude=" + str(lat) + "and Longitude=" + str(lng)
            print(gps)
        ########## END GPS ########################
        time += 1
        sleep(1)
    return average(lat_list), average(lng_list)

if __name__ == "__main__":
    lat, lng = main() # returns avg long and lat data
    print(f"Average Latitude: {lat}")
    print(f"Average Longitude: {lng}")
